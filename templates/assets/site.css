/* Reset css */

*, *::before, *::after {
    box-sizing: border-box;
}

* {
    font: inherit;
    margin: 0;
    padding: 0;
    border: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

button, input, textarea, select, .reset {
    background-color: transparent;
    border-radius: 0;
    color: inherit;
    line-height: inherit;
    -webkit-appearance: none;
        -moz-appearance: none;
            appearance: none;
}

ol, ul, nav {
    list-style: none;
}

blockquote, q {
    quotes: none;
}

mark {
    background-color: transparent;
    color: inherit;
}

/*
    CSS Variables for consistent styling
    ------------------------------------
    Naming conventions:
    - `font-primary` : Primary font
    - `font-secondary` : Secondary font
    - `bfs` : Base Font Size
    - `fs`  : Font Size
    - `sp`  : Spacing (padding, margin)
    - `lh`  : Line Height
    - `mw`  : Max Width
    - `mwf` : Fluid Max Width
    - `br`  : Border Radius
    - `sh`  : Shadow
*/

:where(html) {

    /* Fonts */
    --font-primary: var(--font-jetbrains-mono), Arial, sans-serif;
    --font-secondary: var(--font-jetbrains-mono), Arial, sans-serif;
    
    /* Base font size */
    --bfs: 16px;
    
    /* Fluid font sizes with range comments */
    --fs-8xl: clamp(3rem, 4vw + 2rem, 4.5rem); /* 48px - 72px */
    --fs-7xl: clamp(2.625rem, 3vw + 1.5rem, 3.25rem); /* 42px - 52px */
    --fs-6xl: clamp(2.25rem, 2.5vw + 1.5rem, 2.625rem); /* 36px - 42px */
    --fs-5xl: clamp(2.125rem, 2vw + 1rem, 2.5rem); /* 34px - 40px */
    --fs-4xl: clamp(1.75rem, 1.8vw + 1rem, 2.25rem); /* 28px - 36px */
    --fs-3xl: clamp(1.625rem, 1.5vw + 1rem, 2rem); /* 26px - 32px */
    --fs-2xl: clamp(1.438rem, 1.2vw + 0.9rem, 2rem); /* 23px - 32px */
    --fs-xl: clamp(1.25rem, 1vw + 0.75rem, 1.5rem); /* 20px - 24px */
    --fs-lg: clamp(1.188rem, 0.9vw + 0.75rem, 1.375rem); /* 19px - 22px */
    --fs-md: clamp(1.125rem, 0.8vw + 0.75rem, 1.25rem); /* 18px - 20px */
    --fs-sm: clamp(1.063rem, 0.7vw + 0.75rem, 1.125rem); /* 17px - 18px */
    --fs-xs: clamp(0.75rem, 0.3vw + 1rem, 1rem); /* 12px - 16px */
    --fs-2xs: clamp(0.625rem, 0.2vw + 0.875rem, 0.875rem); /* 10px - 14px */
    --fs-3xs: clamp(0.5rem, 0.2vw + 0.875rem, 0.813rem); /* 8px - 13px */

    /* Spacing (padding, margin) with range comments */
    --sp-8xl: clamp(4.5rem, 3.6rem + 7.2vw, 6rem); /* 72px - 96px */
    --sp-7xl: clamp(3.5rem, 2.8rem + 6.4vw, 5rem); /* 56px - 80px */
    --sp-6xl: clamp(3rem, 2.4rem + 5.6vw, 4.5rem); /* 48px - 72px */
    --sp-5xl: clamp(2.5rem, 2rem + 4vw, 3.5rem); /* 40px - 56px */
    --sp-4xl: clamp(1.75rem, 1.6rem + 3.5vw, 2rem); /* 28px - 32px */
    --sp-3xl: clamp(1.375rem, 1.2rem + 2.8vw, 2rem); /* 22px - 32px */
    --sp-2xl: clamp(1.125rem, 1vw + 1.3rem, 1.375rem); /* 18px - 22px */
    --sp-xl: clamp(1rem, 0.8vw + 1.5rem, 1.188rem); /* 16px - 19px */
    --sp-lg: clamp(0.875rem, 0.7vw + 1rem, 1rem); /* 14px - 16px */
    --sp-md: clamp(0.75rem, 0.6vw + 0.9rem, 1rem); /* 12px - 16px */
    --sp-sm: clamp(0.625rem, 0.5vw + 0.75rem, 0.875rem); /* 10px - 14px */
    --sp-xs: clamp(0.5rem, 0.4vw + 0.5rem, 0.75rem); /* 8px - 12px */
    --sp-2xs: clamp(0.375rem, 0.3vw + 0.4rem, 0.5rem); /* 6px - 8px */
    --sp-3xs: clamp(0.313rem, 0.25vw + 0.3rem, 0.375rem); /* 5px - 6px */
    --sp-4xs: clamp(0.25rem, 0.2vw + 0.25rem, 0.313rem); /* 4px - 5px */
    --sp-5xs: clamp(0.188rem, 0.15vw + 0.2rem, 0.25rem); /* 3px - 4px */
    --sp-6xs: clamp(0.125rem, 0.1vw + 0.15rem, 0.188rem); /* 2px - 3px */
    --sp-7xs: clamp(0.063rem, 0.05vw + 0.1rem, 0.125rem); /* 1px - 2px */
    
    /* Line heights */
    --lh-xl: 2.1;
    --lh-lg: 1.72;
    --lh-md: 1.58;
    --lh-sm: 1.4;
    --lh-xs: 1.4;
    
    /* Max widths */
    --mw-xl: 80rem;
    --mw-lg: 64rem;
    --mw-md: 52rem;
    --mw-sm: 48rem;
    --mw-xs: 42rem;
    --mw-2xs: 38rem;
    --mw-3xs: 32rem;
    --mw-4xs: 28rem;
    --mw-5xs: 24rem;

     /* Fluid max-width */
     --mwf-2xl: clamp(80rem, 90vw, 96rem); /* 1280px - 1536px */
     --mwf-xl: clamp(65rem, 75vw, 80rem); /* 1040px - 1280px */
     --mwf-lg: clamp(55rem, 60vw, 64rem); /* 880px - 1040px */
     --mwf-md: clamp(45rem, 50vw, 52rem); /* 720px - 880px */
     --mwf-sm: clamp(40rem, 45vw, 48rem); /* 640px - 720px */
     --mwf-xs: clamp(35rem, 40vw, 42rem); /* 560px - 640px */
     --mwf-2xs: clamp(30rem, 35vw, 38rem); /* 480px - 560px */
     --mwf-3xs: clamp(25rem, 30vw, 32rem); /* 400px - 480px */
     --mwf-4xs: clamp(20rem, 25vw, 28rem); /* 320px - 400px */
     --mwf-5xs: clamp(18rem, 22vw, 24rem); /* 288px - 320px */

    /* Border radius */
    --br-xl: var(--sp-xl);
    --br-lg: var(--sp-lg);
    --br-md: var(--sp-md);
    --br: var(--sp-xs);
    
    /* Shadows */
    --sh: 0 2px 4px var(--color-shadow);
    --sh-md: 0.5rem 0.1875rem 0.8125rem 0rem var(--color-shadow);
    --sh-sm: 0.5rem 0.1875rem 0.8125rem -0.3125rem var(--color-shadow);
    --sh-xs: 0.5rem 0.1875rem 0.8125rem -0.5rem var(--color-shadow);
}

:where(html) {
    /* Dark and Neutral Colors */
        --color-black: #111111;
        --color-navy: #001F3F;
        --color-shadow: #2a2b36;
        --color-midnight-blue: #191970;
        --color-charcoal: #36454F;
        --color-shadow-dm: #424350;
        --color-umber: #635147;
        --color-gray: #AAAAAA;

    /* Light and Neutral Colors */
        --color-white: #FFFFFF;
        --color-light-white: #F5F5F5;
        --color-off-white: #E0E0E0;
        --color-soft-white: #CCCCCC;
        --color-pale-white: #B3B3B3;
        --color-muted-white: #999999;
        --color-silver: #DDDDDD;
        --color-periwinkle: #CCCCFF;
        --color-lavender: #E6E6FA;
        --color-lavender-blush: #FFF0F5;
        --color-wheat: #F5DEB3;
        --color-almond: #EFDECD;
        --color-cream: #FFFDD0;
        --color-melon: #FEBAAD;
        --color-pink: #FFC0CB;

    /* Purples and Pinks */
        --color-purple: #B10DC9;
        --color-rose: #FF007F;
        --color-fuchsia: #F012BE;
        --color-violet: #6e58b3;
        --color-indigo: #4B0082;

    /* Reds and Warm Colors */
        --color-berry: #8A2E67;
        --color-wine: #722F37;
        --color-maroon: #85144B;
        --color-red: #FF4136;
        --color-blush: #DE5D83;
        --color-red-error: #ff5e55;
        --color-salmon: #FA8072;
        --color-coral: #FF7F50;
        --color-orange: #FF851B;
        --color-caramel: #AF6E4D;
        --color-copper: #B87333;
        --color-bronze: #CD7F32;
        --color-yellow: #FFDC00;
        --color-amber: #FFBF00;
        --color-saffron: #F4C430;
        --color-gold: #FFD700;

    /* Greens and Teals */
        --color-green: #2ECC40;
        --color-olive: #3D9970;
        --color-forest-green: #228B22;
        --color-moss: #8A9A5B;
        --color-mint: #98FF98;
        --color-emerald: #50C878;
        --color-jade: #00A86B;
        --color-teal: #39CCCC;
        --color-dark-teal: #318178;
        --color-turq: #0fc5b0;
        --color-seafoam: #93E9BE;

    /* Blues and Cool Colors */
        --color-blue: #0074D9;
        --color-royal-blue: #4169E1;
        --color-steel-blue: #4682B4;
        --color-cerulean: #007BA7;
        --color-aqua: #7fdbff;
        --color-sky-blue: #87CEEB;
        --color-cadet-blue: #5F9EA0;

    /* Special and Other Colors */
        --color-shadow-stealthy: #6173856b;
        --color-chocolate: #D2691E;
        --color-slate-gray: #708090;

    /* Base colors */
        --color-primary: var(--color-blue);
        --color-secondary: var(--color-gray);
        --color-accent: var(--color-violet);
        --color-warning: var(--color-orange);
        --color-success: var(--color-turq);
        --color-error: var(--color-red-error);
        --color-disabled: var(--color-silver);

    /* Default theme colors [data-theme = 'basic'] */
        --bg-color: var(--color-white);
        --text-color: var(--color-black);
        --link-color: var(--color-blue);
        --link-selected: var(--color-violet);
        --heading-color: var(--color-navy);
        --btn-def-bg: var(--color-white);
        --btn-def-color: var(--color-black);
        --shadow-color: var(--color-shadow);

    /* mix primary */
        --color-primary-10: color-mix(in srgb, var(--color-primary), transparent 10%);
        --color-primary-20: color-mix(in srgb, var(--color-primary), transparent 20%);
        --color-primary-30: color-mix(in srgb, var(--color-primary), transparent 30%);
        --color-primary-40: color-mix(in srgb, var(--color-primary), transparent 40%);
        --color-primary-50: color-mix(in srgb, var(--color-primary), transparent 50%);
        --color-primary-60: color-mix(in srgb, var(--color-primary), transparent 60%);
        --color-primary-70: color-mix(in srgb, var(--color-primary), transparent 70%);
        --color-primary-80: color-mix(in srgb, var(--color-primary), transparent 80%);
        --color-primary-90: color-mix(in srgb, var(--color-primary), transparent 90%);

    /* mix secondary */
        --color-secondary-10: color-mix(in srgb, var(--color-secondary), transparent 10%);
        --color-secondary-20: color-mix(in srgb, var(--color-secondary), transparent 20%);
        --color-secondary-30: color-mix(in srgb, var(--color-secondary), transparent 30%);
        --color-secondary-40: color-mix(in srgb, var(--color-secondary), transparent 40%);
        --color-secondary-50: color-mix(in srgb, var(--color-secondary), transparent 50%);
        --color-secondary-60: color-mix(in srgb, var(--color-secondary), transparent 60%);
        --color-secondary-70: color-mix(in srgb, var(--color-secondary), transparent 70%);
        --color-secondary-80: color-mix(in srgb, var(--color-secondary), transparent 80%);
        --color-secondary-90: color-mix(in srgb, var(--color-secondary), transparent 90%);

    /* mix accent */
        --color-accent-10: color-mix(in srgb, var(--color-accent), transparent 10%);
        --color-accent-20: color-mix(in srgb, var(--color-accent), transparent 20%);
        --color-accent-30: color-mix(in srgb, var(--color-accent), transparent 30%);
        --color-accent-40: color-mix(in srgb, var(--color-accent), transparent 40%);
        --color-accent-50: color-mix(in srgb, var(--color-accent), transparent 50%);
        --color-accent-60: color-mix(in srgb, var(--color-accent), transparent 60%);
        --color-accent-70: color-mix(in srgb, var(--color-accent), transparent 70%);
        --color-accent-80: color-mix(in srgb, var(--color-accent), transparent 80%);
        --color-accent-90: color-mix(in srgb, var(--color-accent), transparent 90%);

    /* mix contrast */
        --color-contrast-10: color-mix(in srgb, var(--text-color) 90%, var(--bg-color) 10%);
        --color-contrast-20: color-mix(in srgb, var(--text-color) 80%, var(--bg-color) 20%);
        --color-contrast-30: color-mix(in srgb, var(--text-color) 70%, var(--bg-color) 30%);
        --color-contrast-40: color-mix(in srgb, var(--text-color) 60%, var(--bg-color) 40%);
        --color-contrast-50: color-mix(in srgb, var(--text-color) 50%, var(--bg-color) 50%);
        --color-contrast-60: color-mix(in srgb, var(--text-color) 40%, var(--bg-color) 60%);
        --color-contrast-70: color-mix(in srgb, var(--text-color) 30%, var(--bg-color) 70%);
        --color-contrast-80: color-mix(in srgb, var(--text-color) 20%, var(--bg-color) 80%);
        --color-contrast-90: color-mix(in srgb, var(--text-color) 10%, var(--bg-color) 90%);
    }

/* headings */
h1, h2, h3, h4, .h1, .h2, .h3, .h4 {
    color: var(--heading-color);
    font-family: var(--font-secondary);
    line-height: var(--lh-sm);
    margin-top: var(--sp-2xl);
    margin-bottom: var(--sp-xl);
    word-break: break-word;
}

h1, .h1 {
    font-size: var(--fs-2xl);
    letter-spacing: var(--sp-3xs);
}

h2, .h2 {
    font-size: var(--fs-xl);
    letter-spacing: var(--sp-4xs);
}

h3, .h3 {
    font-size: var(--fs-lg);
}

h4, .h4 {
    font-size: var(--fs-md);
}

/* paragraph */
p {
    font-size: inherit;
    margin: var(--sp-xl) 0;
    line-height: var(--lh-md);
    word-break: break-word; 
}

/* link */
a, .link {
    color: var(--link-color);
    display: inline-block;
    text-decoration: none;
    transition: all .2s ease;
    word-break: break-word;
    font-size: inherit;

   > * {
        color: inherit;
    }

    &:hover {
        opacity: 0.7;
        cursor:pointer;
    }
}

/* blockquote */
blockquote {
    color: var(--text-color);
    font-style: italic;
    font-size: var(--fs-lg);
    padding: var(--sp-xs);
    padding-left: var(--sp-xl);
    border-radius: var(--br);
    &:before {
        color: var(--color-primary);
        position: absolute;
        transform: translate(-1.7rem, -1rem);
        content: "\201C"; /* Unicode character for left double quotation mark */
        font-size: var(--fs-5xl);
        margin-right: var(--sp-xs);

    }
}

hr {
    border-top: var(--sp-6xs) dashed var(--outline-color);
    margin: var(--sp-xl) auto;
    width: 100%;
    /* desktops */
    @media (min-width: 64rem) {
        max-width: 80%;
    }
}

pre, code, code[class*=language-] {
	overflow: auto;
    word-break: break-word;
}

pre {
    background-color: var(--color-black);
    color: var(--color-teal);
    padding: var(--sp-md);
    display: grid;
	overflow-x: hidden;
}

/* article */
article {
    /* Styling for links within the <article> element */
    a {
        font-size: var(--fs-md); /* Set default font size for links in the article */

        /* Reset the font size for links inside specific elements (h1, h2, h3, blockquote)
           to inherit the parent's font size instead of using --fs-md */
        :where(h1, h2, h3, blockquote) & {
            font-size: inherit; /* Inherit font size from parent */
        }
    }
}

/* section */
section :first-child:where(h3), .title {
    font-size: var(--fs-xl);
}

/* small */
small, .text-sm {
    font-size: var(--fs-2xs);
    margin: var(--sp-5xs) 0;
}

.text-xs {
    font-size: var(--fs-3xs);
    margin: var(--sp-6xs) 0;
}

/* text lead */
.lead {
    opacity: .7;
}

html {
    background-color: var(--bg-color);
    color: var(--text-color);
    scroll-behavior: smooth;
    font-size: var(--bfs); /* base font size */

    /* https://developer.chrome.com/docs/web-platform/view-transitions/cross-document?hl=pl */
    @view-transition {
        navigation: auto;
    }

    /* focus visible */
    button,
    input,
    textarea,
    select,
    a[href],
    .btn,
    .link {
        &:focus-visible {
            outline: var(--sp-5xs) dashed var(--text-color) !important;
        }
    }

    /* https://www.magicpattern.design/tools/css-backgrounds */
    &::after {
        content: "";
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        opacity: 0.3;
        z-index: -1;
        background-image: radial-gradient(var(--text-color) 1px, transparent 1px);
        background-size: 38px 38px;
        filter: blur(1px);
    }
}

body {
    font-family: var(--font-primary);
    font-size: var(--fs-sm);
    line-height: var(--lh-md);
    letter-spacing: var(--sp-6xs);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    padding: var(--sp-sm);

    /* desktops */
    @media (min-width: 64rem) {
        margin: auto;
        max-width: var(--mw-xl);
        height: 100vh;
    }
}

header {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    align-items: center;
    gap: var(--sp-xs);
}

footer {
    display: grid;
    justify-items: center;
    gap: var(--sp-3xl);
    padding: var(--sp-md);
}

/* main {} */

section, footer {
    margin: var(--sp-5xl) 0;
}

.brand {
    display: flex;
    flex-direction: column;
    align-items: end;
}

.hero {
    margin: var(--sp-lg) 0;
}

/* Breadcrumbs */
.breadcrumbs {
    display: flex;
    flex-wrap: wrap;
    gap: var(--sp-3xs);
    font-size: var(--fs-md);
    align-items: center;
    margin-bottom: var(--sp-xl);
    .actual-page {
        margin: 0;
        padding: 0;
    }
    
    @media (min-width: 64rem) {
        margin: var(--sp-2xl);
    }
}

/* Footer */
.info-links {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: var(--sp-6xl);

    @media (min-width: 64rem) {
        justify-content: space-around;
    }

    .socialProfiles ul {
        list-style: none;
        margin-left: 0;
        gap: var(--sp-2xs);
        display: flex;
        flex-direction: column;
        li a {
            display: flex;
            align-items: center;
        }
    }
    
    /* multi-column layout  https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_multicol_layout/Basic_concepts 
    https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_multicol_layout */
    .usefulLinks ul {
        list-style: none !important;
        columns: 1;
        column-width: auto;
        column-gap: var(--sp-5xl);
        column-rule: var(--sp-5xs) dashed var(--color-contrast-80);
    
        @media (min-width: 48rem) {
            columns: 3;
        }
    
        @media (min-width: 64rem) {
            columns: 4;
        }
    }
}

.copyright {
    letter-spacing: var(--sp-4xs);
}

/* scrool top */
.to-top {
    position: fixed !important;
    bottom: var(--sp-2xs);
    right: var(--sp-3xl);
    cursor: pointer;
    z-index: 999;
}

/* Debug region */
.pw-debug {
	background-color: var(--color-silver);
	color: var(--color-black);
	padding: var(--sp-md);
	margin: var(--sp-lg);
}

/* admin actions */
.adminActions {
    position: fixed;
    top: 0;
    left: var(--sp-xl);
    display: grid;
	/* z-index: 2000; */
}

/* categories nav */
/* .categories-nav {
    overflow: auto;
    display: block !important;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
    a:not(:first-child) {
        &::before {
            content: "/ ";
            color: var(--color-accent-40);
        }
    }
    @media (min-width: 48rem) {
        max-width: var(--mw-md);
    }
} */

/* Editor */
.align_left, .align_right, .align_center,
a:has(> img.align_left), a:has(> img.align_right), a:has(> img.align_center) {
	display: block;
	float: none;
	margin: var(--sp-md) auto;
	max-width: 100%;
}

/* desktops */
@media (min-width: 48rem) {
	.align_left, a:has(> img.align_left) {
		float: left;
		padding: var(--sp-md);
		position: relative;
		max-width: 50%;
	}

	.align_right, a:has(> img.align_right) {
		float: right;
		padding: var(--sp-md);
		max-width: 50%;
	}

	.align_center, a:has(> img.align_center) {
		display: block;
		margin: auto;
		padding: var(--sp-md);
		position: relative;
	}
}

/* animations */
:where(html) {
    --animation-time: .5s; 
}

.fade-in {
    animation: fadeIn var(--animation-time) forwards;
}
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.fade-out {
    animation: fadeOut var(--animation-time) forwards;
}
@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

.slide-up {
    animation: slideUp var(--animation-time) forwards;
}
@keyframes slideUp {
    from { transform: translateY(20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

.slide-down {
    animation: slideDown var(--animation-time) forwards;
}
@keyframes slideDown {
    from { transform: translateY(-20px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
}

.slide-left {
    animation: slideLeft var(--animation-time) forwards;
}
@keyframes slideLeft {
    from { transform: translateX(20px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

.slide-right {
    animation: slideRight var(--animation-time) forwards;
}
@keyframes slideRight {
    from { transform: translateX(-20px); opacity: 0; }
    to { transform: translateX(0); opacity: 1; }
}

.zoom-in {
    animation: zoomIn var(--animation-time) forwards;
}
@keyframes zoomIn {
    from { transform: scale(0.8); opacity: 0; }
    to { transform: scale(1); opacity: 1; }
}

.zoom-out {
    animation: zoomOut var(--animation-time) forwards;
}
@keyframes zoomOut {
    from { transform: scale(1.2); opacity: 1; }
    to { transform: scale(1); opacity: 0; }
}

.rotate {
    animation: rotate var(--animation-time) forwards;
}
@keyframes rotate {
    from { transform: rotate(0deg); opacity: 0; }
    to { transform: rotate(360deg); opacity: 1; }
}

.rotate-out {
    animation: rotateOut var(--animation-time) forwards;
}
@keyframes rotateOut {
    from { transform: rotate(360deg); opacity: 1; }
    to { transform: rotate(0deg); opacity: 0; }
}

.flip-in {
    animation: flipIn var(--animation-time) forwards;
}
@keyframes flipIn {
    from { transform: rotateY(90deg); opacity: 0; }
    to { transform: rotateY(0deg); opacity: 1; }
}

.flip-out {
    animation: flipOut var(--animation-time) forwards;
}
@keyframes flipOut {
    from { transform: rotateY(0deg); opacity: 1; }
    to { transform: rotateY(90deg); opacity: 0; }
}

.fade-slide-up {
    animation: fadeSlideUp var(--animation-time) forwards;
}
@keyframes fadeSlideUp {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
}

.fade-slide-down {
    animation: fadeSlideDown var(--animation-time) forwards;
}
@keyframes fadeSlideDown {
    from { opacity: 0; transform: translateY(-20px); }
    to { opacity: 1; transform: translateY(0); }
}

.fade-slide-left {
    animation: fadeSlideLeft var(--animation-time) forwards;
}
@keyframes fadeSlideLeft {
    from { opacity: 0; transform: translateX(20px); }
    to { opacity: 1; transform: translateX(0); }
}

.fade-slide-right {
    animation: fadeSlideRight var(--animation-time) forwards;
}
@keyframes fadeSlideRight {
    from { opacity: 0; transform: translateX(-20px); }
    to { opacity: 1; transform: translateX(0); }
}

.pulse {
    animation: pulse-animation 3s infinite;
}
  
@keyframes pulse-animation {
    0% {
        box-shadow: 0 0 0 0px rgba(0, 0, 0, 0.2);
        color: var(--color-text);
    }
    100% {
        box-shadow: 0 0 0 20px rgba(0, 0, 0, 0);
        color: var(--link-color);
    }
}

/* SVG spin animaton */
.spin {
    transform-origin: center;
    animation: spin-keyframes 1.5s ease-in-out infinite,
        spin 2.8s linear infinite;
    animation-direction: alternate;
}

@keyframes spin {
    to {
        transform: rotate(360deg);
    }
}

@keyframes spin-keyframes {
    0% {
        stroke-dasharray: 1, 800;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 400, 400;
        stroke-dashoffset: -200px;
    }
    100% {
        stroke-dasharray: 800, 1;
        stroke-dashoffset: -800px;
    }
}

.glowing-corners {
    --corners-color: var(--color-accent);
    --corners-animation-time: 2s;
    /* text-transform: uppercase; */
    position: relative;
    display: inline-block;
    overflow: hidden;
    padding: var(--sp-xs);
    max-width: fit-content;

    &.-red {
        --corners-color: var(--color-red);
    }

    &.-blue {
        --corners-color: var(--color-blue);
    }

    &.-orange {
        --corners-color: var(--color-orange);
    }

    &.-indigo {
        --corners-color: var(--color-indigo);
    }

    span {
        position: absolute;
        display: block;

        &:nth-child(1){
            top: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg,transparent,var(--corners-color));
            animation: animate-corner1 var(--corners-animation-time) linear infinite;
        }

        &:nth-child(2){
            top: -100%;
            right: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(180deg,transparent,var(--corners-color));
            animation: animate-corner2 var(--corners-animation-time) linear infinite;
            animation-delay: 0.25s;
        }

        &:nth-child(3){
            bottom: 0;
            right: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(270deg,transparent,var(--corners-color));
            animation: animate-corner3 var(--corners-animation-time) linear infinite;
            animation-delay: 0.50s;
        }

        &:nth-child(4){
            bottom: -100%;
            left: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(360deg,transparent,var(--corners-color));
            animation: animate-corner4 var(--corners-animation-time) linear infinite;
            animation-delay: 0.75s;
        }

    }
}

@keyframes animate-corner1 {
    0%{
        left: -100%;
    }
    50%,100%{
        left: 100%;
    }
}
@keyframes animate-corner2 {
    0%{
        top: -100%;
    }
    50%,100%{
        top: 100%;
    }
}

@keyframes animate-corner3 {
    0%{
        right: -100%;
    }
    50%,100%{
        right: 100%;
    }
}
@keyframes animate-corner4 {
    0%{
        bottom: -100%;
    }
    50%,100%{
        bottom: 100%;
    }
}
.blog-items, .category-items {
    columns: 2;
    column-width: 420px;
    column-gap: var(--sp-3xl);
    article {
        break-inside: avoid;
        width: 100%; 
    }
}

/* alerts */
.alert {
    box-shadow: var(--sh);
    border-radius: var(--br);
    color: var(--color-white);
    margin: var(--sp-xl);
    padding: var(--sp-xl);
    position: relative;
    z-index: 1999;
    max-width: 98vw;

    &:where(p) {
        font-size: var(--fs-lg);
        margin-top: var(--sp-xs);
    }
}
/* buttons */
button, .btn {
    background: var(--btn-def-bg);
    color: var(--btn-def-color);
    display: inline-block;
    padding: var(--sp-4xs) var(--sp-lg);
    border-radius: var(--br);
    font-size: var(--fs-sm);
    margin: var(--sp-lg) var(--sp-3xs) var(--sp-lg) 0;
    text-align: center;
    text-decoration: none;
    text-wrap: pretty;
    box-shadow: var(--sh);
    cursor: pointer;
    transition: all 0.3s;
    width: fit-content;

    &:hover {
        opacity: 0.7;
    }

    /* Disabled button */
    &:disabled, &.-disabled {
        background-color: var(--color-contrast-90);
        color: var(--color-contrast-60);
        box-shadow: none;
        cursor: not-allowed;
    }

    &.-xl {
        padding: var(--sp-sm) var(--sp-6xl);
        font-size: var(--fs-xl);
    }
    
    &.-lg {
        padding: var(--sp-2xs) var(--sp-5xl);
        font-size: var(--fs-lg);
    }
    
    &.-md {
        padding: var(--sp-3xs) var(--sp-2xl);
        font-size: var(--fs-md);
    }
    
    &.-sm {
        padding: var(--sp-5xs) var(--sp-xs);
    }
    
    &.-xs {
        padding: var(--sp-6xs) var(--sp-2xs);
        font-size: var(--fs-xs);
    }
    
    &.--2xs {
        padding: var(--sp-7xs);
        font-size: var(--fs-3xs);
    }    

    &.-link {
        background: none;
        box-shadow: none;
        color: var(--link-color);
        border: none;
    }

    &.-bg-none {
        background: none;
        box-shadow: none;
        color: var(--text-color);
    }

    /* Icon button */
    &.-icon {
        display: inline-flex;
        align-items: center;
        gap: var(--sp-3xs);
        padding: var(--sp-4xs) var(--sp-3xs);
        &.dn {
            display: none;
        }
    }
}
.card, .component_card {
    outline: var(--sp-3xs) dotted transparent;
    outline-offset: var(--sp-3xs);
    border-radius: var(--sp-sm);
    box-shadow: var(--sh-sm);
    margin: var(--sp-3xl) var(--sp-3xs);
    padding: var(--sp-md);
    transition: all .3s ease;
    color: var(--text-color);
    border: var(--sp-7xs) solid var(--color-contrast-90);
    background-color: color-mix(in srgb, var(--bg-color), transparent 50%);
    img {
        max-width: 100%;
        margin: auto;
        border-radius: var(--sp-sm);
        margin-bottom: var(--sp-sm);
    }
    .-title {
        font-size: var(--fs-lg);
        font-weight: 700;
        margin-bottom: var(--sp-sm);
        transition: all .7s ease;
    }
    .-content {
        font-size: var(--fs-sm);
    }

    &.-sm {
        padding: var(--sp-2xs);
        font-size: var(--fs-xs);
    }

    &.-xs {
        padding: var(--sp-3xs);
        font-size: var(--fs-2xs);
    }

    &.--2xs {
        padding: var(--sp-4xs);
        font-size: var(--fs-3xs);
    }

    &:hover {
        &.-hoverable {
            outline-color: var(--color-accent-60);
            background-color: var(--color-violet);
            color: var(--color-white);
            border-color: transparent;
            box-shadow: none;
            cursor: pointer;
            h3 {
                color: var(--color-white);
            }
        }
    }
}
/* Base styles for the dialog */
dialog {
    background-color: var(--bg-color);
    border-radius: var(--br);
    border: var(--sp-4xs) dashed var(--color-primary);
    padding: var(--sp-xl);
    opacity: 0;
    position: fixed;
    inset: 0; /** Allows flexible positioning **/
    margin: auto;
  
    /* Default entrance animation */
    transform: translateY(-20px);

    /* Smooth transition effects */
    &, &::backdrop {
        transition: opacity 1s ease, transform 1s ease;
    }
}

/* Dialog visibility when opened */
dialog[open] {
    opacity: 1;
    transform: translateY(0);
}

/* Backdrop styling */
dialog[open]::backdrop {
    opacity: 0.8;
    transition: opacity 1s ease;
}

/* Entrance animation */
@starting-style {
    dialog[open] {
        opacity: 0;
        transform: translateY(20px);
    }
}



/* Custom style for embera reponsive embed - https://github.com/mpratt/Embera/blob/master/doc/05-responsive-embeds.md */

.embedItem {
    max-width: var(--mw-md);
    margin: auto;
    margin-top: var(--sp-2xl);
    .embedContent {
        max-width: var(--mw-xs);
        margin: auto;
        :hover {
            cursor: pointer;
            opacity: 0.8;
            transition: all .3s ease-in;
        }
    }
    .embed-title {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center
    }
}
.embera-embed-responsive {
    position: relative;
    display: block;
    width: 100%;
    padding: 0;
    overflow: hidden;
    padding-bottom: 50%;
}
.embera-embed-responsive-item {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
}
.embera-embed-responsive-item,
.twitter-tweet {
    margin: auto;
}
/* Form */
form {
    width: 100%;
    padding: var(--sp-5xs);
    margin-top: var(--sp-3xl);
    margin-bottom: var(--sp-3xl);

    fieldset, .fieldset {
        /* background: var(--bg-color); */
        display: grid;
        grid-gap: var(--sp-2xs);
        &.-border {
            border: var(--sp-6xs) dashed var(--color-accent);
            padding: var(--sp-xl);
            border-radius: var(--br);
        }
    }

    legend {
        font-family: var(--font-secondary);
        font-size: var(--fs-lg);
        border-radius: var(--br);
        margin-bottom: var(--sp-2xl);
        > * {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: var(--sp-4xs);
            margin: var(--sp-6xs);
        }
    }

    label {
        display:inline-block;
        margin-bottom: var(--sp-xs);
        &.required:before {
            content: " *\A";
            color: var(--color-orange);
        }
    }
}

input, textarea, select {
    background-color: var(--bg-color);
    color: var(--text-color);
    display: block;
    margin-bottom: var(--sp-sm);
    padding: var(--sp-2xs);
    font-size: var(--fs-sm);
    border: 1px solid var(--color-secondary);
    border-radius: var(--br);
    transition: border-color 0.3s ease-in-out;
    &:not([type='submit'],[type='search'], [type='number'], select, .fsc) {
        width: 100%;
    }
    &.fsc {
        field-sizing: content;
        word-break: break-word;
    }    
}

input:focus, textarea:focus, select:focus {
    outline: none;
    border-color: var(--color-primary);
}

input[type="file"] {
    background-color: var(--bg-color);
    color: var(--text-color);
    margin-bottom: var(--sp-sm);
    font-size: var(--fs-sm);
    border: 1px dashed var(--color-accent);
    padding: var(--sp-xs);
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    &:hover {
        filter: opacity(0.5);
    }
    &::file-selector-button {
        display: none;
    }
    /* &::file-selector-button:hover {
        filter: opacity(0.5);
    } */
}

input[type='checkbox'],
input[type='radio'] {
    --active: var(--color-royal-blue);
    --active-inner: var(--color-lavender);
    --focus: 2px var(--color-accent);
    --border: var(--color-navy);
    --border-hover: var(--color-bronze);
    --background: var(--color-wheat);
    /* --disabled: var(--color-pale-white); */
    --disabled: var(--color-disabled);
    --disabled-inner: var(--color-cerulean);
    appearance: none;
    height: 21px;
    outline: none;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background .3s, border-color .3s, box-shadow .2s;
    &:after {
    content: '';
    display: block;
    left: 0;
    top: 0;
    position: absolute;
    transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
    }
    &:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
    }
    &:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: .9;
    &:checked {
        --b: var(--disabled-inner);
        --bc: var(--border);
    }
    & + label {
        cursor: not-allowed;
    }
    }
    &:hover {
    &:not(:checked) {
        &:not(:disabled) {
        --bc: var(--border-hover);
        }
    }
    }
    &:focus {
    box-shadow: 0 0 0 var(--focus);
    }
    &:not(.switch) {
    width: 21px;
    &:after {
        opacity: var(--o, 0);
    }
    &:checked {
        --o: 1;
    }
    }
    & + label {
    font-size: 14px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    margin-left: 4px;
    }
}
input[type='checkbox'] {
    &:not(.switch) {
    border-radius: 7px;
    &:after {
        width: 5px;
        height: 9px;
        border: 2px solid var(--active-inner);
        border-top: 0;
        border-left: 0;
        left: 7px;
        top: 4px;
        transform: rotate(var(--r, 20deg));
    }
    &:checked {
        --r: 43deg;
    }
    }
    &.switch {
    width: 38px;
    border-radius: 11px;
    &:after {
        left: 2px;
        top: 2px;
        border-radius: 50%;
        width: 15px;
        height: 15px;
        background: var(--ab, var(--border));
        transform: translateX(var(--x, 0));
    }
    &:checked {
        --ab: var(--active-inner);
        --x: 17px;
    }
    &:disabled {
        &:not(:checked) {
        &:after {
            opacity: .6;
        }
        }
    }
    }
}
input[type='radio'] {
    border-radius: 50%;
    &:after {
    width: 19px;
    height: 19px;
    border-radius: 50%;
    background: var(--active-inner);
    opacity: 0;
    transform: scale(var(--s, .7));
    }
    &:checked {
    --s: .5;
    }
}

/* textarea, select, input {
    field-sizing: content;
} */
/* https://wicky.nillia.ms/headroom.js/ */
.headroom {
    will-change: transform;
    transition: transform 200ms linear;
}
.headroom--pinned {
    transform: translateY(0%);
}
.headroom--unpinned {
    transform: translateY(-200%);
}

.icon {
    /* mobile size */
    --base-size: 1.2;

    /* set size */
    --size: var(--base-size);

    font-size: calc(var(--size) * 1em);
    height: calc(var(--size) * 1em);
    width: calc(var(--size) * 1em);
    min-width: calc(var(--size) * 1em);
    min-height: calc(var(--size) * 1em);
    display: flex;
    color: inherit;
    fill: currentColor;

    /* Desktops */
    @media (min-width: 64rem) {
        --base-size: 1.25;
    }

    &.--5xl {
        --size: calc(var(--base-size) * 3.0);
    }
    
    &.--4xl {
        --size: calc(var(--base-size) * 2.6);
    }
    
    &.--3xl {
        --size: calc(var(--base-size) * 2.2);
    }
    
    &.--2xl {
        --size: calc(var(--base-size) * 1.7);
    }
    
    &.--xl {
        --size: calc(var(--base-size) * 1.3);
    }
    
    &.--lg {
        --size: calc(var(--base-size) * 1.1);
    }
    
    &.--md {
        --size: var(--base-size) * 1.05;
    }
    
    &.--sm {
        --size: calc(var(--base-size) * 0.95);
    }
    
    &.--xs {
        --size: calc(var(--base-size) * 0.85);
    }
    
    &.--2xs {
        --size: calc(var(--base-size) * 0.75);
    }    
}

/* rotate the icon infinitely */
.icon--is-spinning {
    animation: icon-spin 3s infinite linear;
}

@keyframes icon-spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
/* iframe */
.iframe-wrapper {
    position: relative;
    overflow: hidden;
    padding-bottom: 56.25%; /* keep the proportions 16:9 */
    height: 0;
    width: 100%;
    iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 0;
    }
}
/* list */
ul:not(nav ul, .CommentList) {
    list-style-type: disc;
    margin-left: var(--sp-lg);
}

ol:not(nav ol) {
    list-style-type: decimal;
    margin-left: var(--sp-xl);
}

ul, ol {
    padding-left: var(--sp-md);
    &.-list-none {
        list-style-type: none;
    }
    li {
        color: var(--text-color);
        padding: var(--sp-7xs);
        &::marker {
            color: var(--color-primary);
        }
    }
}

/* Images */
img {
    &.lozad {
        filter: blur(5px);
    }
    &.loaded-finish {
        filter: blur(0);
    }
}

/* Figures */
figure {
    display: block;
    text-align: center;
    margin: var(--sp-md) 0;
    padding: var(--sp-md) 0;
}

figcaption {
    color: color-mix(in srgb, var(--text-color), transparent 40%);
    font-size: var(--fs-xs);
    margin-top: var(--sp-xs);
}

/* Video and SVG */
video, svg {
    max-width: 100%;
    display: block;
}


/* responsive class ( img ) */
.responsive {
    width: 100%;
    height: auto;
    box-sizing: border-box;
}

/* Desktops */
@media (min-width: 64rem) {
    figure {
        margin: auto;
        padding: var(--sp-xl) 0;
        max-width: var(--mw-md);
    }

    figcaption {
        caption-side: bottom;
        line-height: var(--sp-sm);
        margin-top: var(--sp-sm);
    }
}

.partial_nav {
    position: fixed;
    top: 0;
    right: 0;
    z-index: 2000;

    @media (min-width: 48rem) {
        position: relative;
        z-index: unset;
    }

    .mobileBtn {
        position: fixed;
        top: 0;
        right: 0;
        margin: var(--sp-xl);
        color: var(--text-color);
        display: flex;
        place-content: center;
        width: 35px;
        height: 35px;

        span {
            font-size: 35px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        @media (min-width: 48rem) {
            display: none !important;
        }
        .opened {
            color: var(--color-red);
        }
    }

    .navLinks {
        top: 0;
        right: 0;
        position: absolute;
        background-color: color-mix(in srgb, var(--bg-color), transparent 40%);
        margin: var(--sp-8xl) var(--sp-xl) 0 var(--sp-xl);
        padding: var(--sp-md);
        max-height: 90vh;
        overflow: auto;

        li {
            padding: var(--sp-5xs);
        }

        a {
            text-decoration: none;
            &.current-lang {
                color: var(--link-selected);
                border-bottom: var(--sp-4xs) dotted;
            }
        }

        &.hide {
            display: none;
        }

        .custom-links {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            align-items: center;
            gap: var(--sp-md);

            &::before {
                content: "|";
                color: var(--color-accent-30);
            }
            .current-lang {
                color: var(--text-color);
                border-bottom: var(--sp-6xs) dotted;
            }
        }

        @media (min-width: 48rem) {
            align-items: center;
            background-color: transparent;
            position: relative;
            margin: 0;
            padding: 0;
            outline: none;
            display: flex;
            flex-direction: row;
            flex-wrap: wrap;
            align-items: baseline;
            overflow: unset;
        }

    }

    li.first-child {
        /* sub nav btn trigger */
        .child-btn {
            margin: 0;
            padding: 0;
        }

        @media (min-width: 48rem) {
            &:not(:first-child)::before {
                content: "/";
                color: var(--color-accent-30);
            }
        }
    }

    .sub-child {
        background: var(--bg-color);
        margin: 0;
        padding: 0 var(--sp-sm);
        font-size: var(--fs-xs);
        /* z-index: 999; */

        ul {
            position: relative;
        }

        li {
            &:not(:first-child)::before {
                content: "";
            }
            &:last-child::before {
                content: "";
            }
        }

        .show-more {
            margin-top: var(--sp-xs);
        }

        @media (min-width: 48rem) {
            position: absolute;
        }
    }
}

/**
 *
 * @link https://developer.chrome.com/blog/new-in-web-ui-io-2024?hl=pl#the_popover_api.
 * @link https://dev.to/link2twenty/future-of-css-popover-api-3ba0.
 * Example usage:
    <button popovertarget="my-popover">Open Popover</button>
        <div id="my-popover" popover>
            <p>I am a popover with more information.</p>
        </div>
 */

[popover] {
    background: var(--color-black);
    color: var(--color-white);
    font-weight: 400;
    margin: 0 auto;
    padding: 1rem 1.5rem;
    border-radius: 1rem;
    max-width: 20ch;
    line-height: 1.4;
    top: 2rem;
}

/* Animating the popover in */

/*   IS-OPEN STATE   */
[popover]:popover-open {
    translate: 0 0;
}

/*   EXIT STATE   */
[popover] {
    transition: translate 0.7s ease-out, display 0.7s ease-out allow-discrete;
    translate: 0 -22rem;
}

/*   0. BEFORE-OPEN STATE   */
@starting-style {
    [popover]:popover-open {
        translate: 0 -22rem;
    }
}
/* table */
table {
    /* border-collapse: collapse; */
    /* caption {} */

    overflow-x: auto;
    display: block;

    thead, tfoot {
        background-color: var(--color-accent);
        color: var(--color-white);
    }

    /* tbody {} */

    th, td {
        border: var(--sp-7xs) solid var(--color-accent-30);
        border-radius: var(--br);
        padding: var(--sp-xs);
        text-align: left;
        white-space: nowrap;
    }
}

/* table */
.table-wrapper {
    width: 100%;
    max-width: 100vw;
    max-height: 600px;
    overflow: auto;
}

/* Example usage:
    <!-- Example buttons with tooltips -->
    <button class="tooltip-button" data-tooltip="Tooltip 1">Button 1</button>
    <button class="tooltip-button" data-tooltip="Tooltip 2">Button 2</button>

    <!-- This tooltip is also enabled on mobile devices -->
    <button class="tooltip-button mobile-on" data-tooltip="Tooltip 3">Clickable on mobile</button>

    <!-- This tooltip appears automatically when the button is in view and stays visible for 5 seconds -->
    <button 
        class="tooltip-button mobile-on" 
        data-tooltip="Tooltip 4" 
        data-show="5">
        Show on the view
    </button>

    <!-- This tooltip appears 3 seconds after the button is in view and stays visible for 5 seconds -->
    <button 
        class="tooltip-button mobile-on" 
        data-tooltip="Tooltip 4"
        data-start="3" 
        data-show="5">
        Show on the view next
    </button>
*/

.tooltip {
    position: absolute;
    background: var(--color-accent);
    color: var(--color-white);
    padding: var(--sp-4xs);
    border-radius: var(--br);
    font-size: var(--fs-3xs);
    pointer-events: none;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    z-index: 2001;
    white-space: nowrap;
}
    
.tooltip-arrow {
    width: 8px;
    height: 8px;
    background: var(--color-accent);
    position: absolute;
    transform: rotate(45deg);
}

:root {
    --outline-size: var(--sp-5xs);
    --outline-color: var(--color-accent-60);
    --outline-offset: var(--sp-5xs);
    --outline-br: var(--br);
}

/* usually for - buttons cards */
.-primary {
    background-color: var(--color-primary);
    color: var(--color-white);
}

.-secondary {
    background-color: var(--color-secondary);
    color: var(--color-white);
}

.-accent {
    background-color: var(--color-accent);
    color: var(--color-white);
}

.-warning {
    background-color: var(--color-warning);
    color: var(--color-white);
}

.-success {
    background-color: var(--color-success);
    color: var(--color-white);
}

.-error {
    background-color: var(--color-error);
    color: var(--color-white);
}

/* display */
.dn {
    display: none;
}

.db {
    display: block;
}

.df {
    display: flex;

    &.-ac {
        align-items: center;
    }

    &.-jc {
        justify-content: center;
    }
}

.dg {
    display: grid;
}

/**
 * This class makes an element responsive by adjusting its width based on the viewport size.
 * 
 * - `max-width: clamp(320px, 50%, 1200px)`:
 *   - `320px` is the minimum width.
 *   - `50%` is the preferred width (50% of the parent container).
 *   - `1200px` is the maximum width.
 * 
 * - `margin: auto`: Centers the element horizontally within its container.
 * 
 * The element will be flexible, never smaller than 320px, and never wider than 1200px.
 */

.mw-responsive {
    max-width: clamp(320px, 50%, 1200px);
    margin: auto;
}

.mw-xl {
    max-width: var(--mw-xl);
    margin: auto;
}

.mw-lg {
    max-width: var(--mw-lg);
    margin: auto;
}

.mw-md {
    max-width: var(--mw-md);
    margin: auto;
}

.mw-sm {
    max-width: var(--mw-sm);
    margin: auto;
}

.mw-xs {
    max-width: var(--mw-xs);
    margin: auto;
}

.mw-2xs {
    max-width: var(--mw-2xs);
    margin: auto;
}

.mw-3xs {
    max-width: var(--mw-3xs);
    margin: auto;
}

.mw-4xs {
    max-width: var(--mw-4xs);
    margin: auto;
}

.mw-5xs {
    max-width: var(--mw-5xs);
    margin: auto;
}


/* overlay */
.overlay {
    background-color: color-mix(in srgb, var(--bg-color), transparent 15%);
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    min-height: 100dvh;
    z-index: 1001;
}

/* custom outline */
.outline, .title, section :first-child:where(h3) {
    border-radius: var(--outline-br);
    width: fit-content;
    outline: var(--outline-size) dashed var(--outline-color);
    outline-offset: var(--outline-offset);
    margin: var(--sp-4xl) 0;
    padding: var(--sp-sm);

    &.-md {
        --outline-size: var(--sp-2xs);
        --outline-offset: var(--sp-sm);
    }

    &.-sm {
        --outline-size: var(--sp-5xs);
        --outline-offset: var(--sp-7xs);
    }

    &.-xs {
        --outline-size: var(--sp-6xs);
        --outline-offset: var(--sp-7xs);
    }
}

/* Cool theme */
[data-theme = 'cool'] {
    --bg-color: var(--color-shadow);
    --text-color: var(--color-white);
    --link-color: var(--color-teal);
    --link-selected: var(--color-coral);
    --heading-color: var(--color-soft-white);
    --btn-def-bg: var(--color-shadow-stealthy);
    --btn-def-color: var(--color-white);
    --shadow-color: var(--color-shadow-dm);
    --outline-color: var(--color-contrast-80);
    --outline-size: var(--sp-4xs);

    .logo._svg {
        filter: invert(1);
    }

}
/* Cyberpunk theme */
[data-theme = 'cyberpunk'] {

    --bg-color: var(--color-navy);
    --text-color: var(--color-white);
    --link-color: var(--color-orange);
    --link-selected: var(--color-fuchsia);
    --heading-color: var(--color-silver);
    --btn-def-bg: var(--color-teal);
    --btn-def-color: var(--color-black);
    --shadow-color: var(--color-shadow-dm);
    --outline-color: var(--color-violet);

    .main-home .hero {
        .random {
            --outline-color: var(--color-secondary-30);
        }
    }

    hr {
        border-top: var(--sp-4xs) dotted var(--color-teal);
    }

    .logo._svg {
        filter: invert(1);
    }

    .component_card {
        background-color: var(--color-purple);
        :where(img){
            filter: drop-shadow(2px 4px 6px var(--bg-color));
        }
    }

}
/* Dark theme */
[data-theme = 'dark'] {
    --bg-color: var(--color-black);
    --text-color: var(--color-white);
    --link-color: var(--color-orange);
    --link-selected: var(--color-red);
    --heading-color: var(--color-off-white);
    --btn-def-bg: var(--color-shadow-stealthy);
    --btn-def-color: var(--color-white);
    --shadow-color: var(--color-shadow-dm);
    .logo._svg {
        filter: invert(1);
    }
}